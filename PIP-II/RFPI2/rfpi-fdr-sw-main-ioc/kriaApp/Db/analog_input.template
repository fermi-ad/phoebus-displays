##### Analog input template #####

# Status parameters
record(bi, "$(acc):$(sys)_$(group)_$(num):LatchStatus_r") {
    field(DESC, "Latched status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_LATCH_STATUS_R")
    field(ZNAM, "OK")
    field(ONAM, "NOT OK")
    field(SCAN, "I/O Intr")
}

record(bi, "$(acc):$(sys)_$(group)_$(num):CurrentStatus_r") {
    field(DESC, "Current status")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_CURRENT_STATUS_R")
    field(ZNAM, "OK")
    field(ONAM, "NOT OK")
    field(SCAN, "I/O Intr")
}

record(calcout, "$(acc):$(sys)_$(group)_$(num):iStatusMask") {
    field(DESC, "Final status logic")
    field(INPA, "$(acc):$(sys)_$(group)_$(num):LatchStatus_r CP")
    field(INPB, "$(acc):$(sys)_$(group)_$(num):Masking_r CP")
    field(INPC, "$(acc):$(sys)_$(group)_$(num):CurrentStatus_r CP")
    field(CALC, "(A=0&B=0&C=1)?2:A")
    field(OUT,  "$(acc):$(sys)_$(group)_$(num):Status_r PP")
}

record(mbbi, "$(acc):$(sys)_$(group)_$(num):Status_r") {
    field(DESC, "Status including masking")
    field(SCAN, "Passive")
    field(ZRVL, "0")
    field(ZRST, "OK")
    field(ONVL, "1")
    field(ONST, "NOT OK")
    field(TWVL, "2")
    field(TWST, "Masked")
}

record(ai, "$(acc):$(sys)_$(group)_$(num):Timestamp_r") {
    field(DESC, "Latch status timestamp")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_TIMESTAMP_R")
    field(SCAN, "I/O Intr")
}

record(longin, "$(acc):$(sys)_$(group)_$(num):TimestampSeq_r") {
    field(DESC, "Timestamp sequence")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_TIMESTAMP_SEQ_R")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(acc):$(sys)_$(group)_$(num):ErrorMsg_r") {
    field(DESC, "Error message")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_ERROR_MSG_R")
    field(SCAN, "I/O Intr")
}

record(bo, "$(acc):$(sys)_$(group)_$(num):Rst_s") {
    field(DESC, "Reset error and clear error msg")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_RESET_S")
    field(SCAN, "Passive")
}

record(longin, "$(acc):$(sys)_$(group)_$(num):ValueRaw_r") {
    field(DESC, "Raw value")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_VALUE_RAW_R")
    field(SCAN, "I/O Intr")
}

record(ai, "$(acc):$(sys)_$(group)_$(num):ValueScaled_r") {
    field(DESC, "Scaled value")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_VALUE_SCAL_R")
    field(SCAN, "I/O Intr")
    field(PREC, "4")
}

# Configuration parameters
## Unit
record(stringout, "$(acc):$(sys)_$(group)_$(num):Unit_s") {
    field(DESC, "Unit for scaled value")
    field(OUT,  "$(acc):$(sys)_$(group)_$(num):ValueScaled_r.EGU PP")
    field(FLNK, "$(acc):$(sys)_$(group)_$(num):iSendUnit1")
    field(SCAN, "Passive")
}

record(stringout, "$(acc):$(sys)_$(group)_$(num):iSendUnit1") {
    field(DESC, "Send unit to thresh low")
    field(DOL,  "$(acc):$(sys)_$(group)_$(num):Unit_s")
    field(OUT,  "$(acc):$(sys)_$(group)_$(num):ThreshLoScaled_r.EGU PP")
    field(OMSL, "closed_loop")
    field(FLNK, "$(acc):$(sys)_$(group)_$(num):iSendUnit2")
    field(SCAN, "Passive")
}

record(stringout, "$(acc):$(sys)_$(group)_$(num):iSendUnit2") {
    field(DESC, "Send unit to thresh high")
    field(DOL,  "$(acc):$(sys)_$(group)_$(num):Unit_s")
    field(OMSL, "closed_loop")
    field(OUT,  "$(acc):$(sys)_$(group)_$(num):ThreshHiScaled_r.EGU PP")
    field(SCAN, "Passive")
}

## Thresholds
record(ao, "$(acc):$(sys)_$(group)_$(num):ThreshLo_s") {
    field(DESC, "Low threshold setpoint")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_LOW_S")
    field(SCAN, "Passive")
}

record(ao, "$(acc):$(sys)_$(group)_$(num):ThreshHi_s") {
    field(DESC, "High threshold setpoint")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_HIGH_S")
    field(SCAN, "Passive")
}

record(longin, "$(acc):$(sys)_$(group)_$(num):ThreshLoRaw_r") {
    field(DESC, "Low raw threshold")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_LOW_RAW_R")
    field(SCAN, "I/O Intr")
}

record(longin, "$(acc):$(sys)_$(group)_$(num):ThreshHiRaw_r") {
    field(DESC, "High raw threshold")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_HIGH_RAW_R")
    field(SCAN, "I/O Intr")
}

record(ai, "$(acc):$(sys)_$(group)_$(num):ThreshLoScaled_r") {
    field(DESC, "Low sclaed threshold")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_LOW_SCAL_R")
    field(SCAN, "I/O Intr")
    field(PREC, "5")
}

record(ai, "$(acc):$(sys)_$(group)_$(num):ThreshHiScaled_r") {
    field(DESC, "High scaled threshold")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_HIGH_SCAL_R")
    field(SCAN, "I/O Intr")
    field(PREC, "5")
}

record(ao,  "$(acc):$(sys)_$(group)_$(num):ThreshScale_s") {
    field(DESC, "Threshold scaling coeff")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_SCALE_S")
    field(SCAN, "Passive")
    field(PREC, "5")
}

record(ai,  "$(acc):$(sys)_$(group)_$(num):ThreshScale_r") {
    field(DESC, "Threshold scaling coeff")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_SCALE_R")
    field(SCAN, "I/O Intr")
    field(PREC, "5")
}

record(ao,  "$(acc):$(sys)_$(group)_$(num):ThreshOffset_s") {
    field(DESC, "Threshold offset coeff SP")
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_OFFSET_S")
    field(SCAN, "Passive")
    field(PREC, "5")
}

## this is just to pass SP to RD
record(ai,  "$(acc):$(sys)_$(group)_$(num):ThreshOffset_r") {
    field(DESC, "Threshold offset coeff RD")
    field(DTYP, "asynFloat64")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_OFFSET_S")
    field(SCAN, "I/O Intr")
    field(PREC, "2")
}

## Counters
record(longin, "$(acc):$(sys)_$(group)_$(num):ThreshCntLo_r") {
    field(DESC, "Counter for passing low threshold")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_CNT_LOW_R")
    field(SCAN, "I/O Intr")
}

record(longin, "$(acc):$(sys)_$(group)_$(num):ThreshCntHi_r") {
    field(DESC, "Counter for passing high threshold")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_CNT_HIGH_R")
    field(SCAN, "I/O Intr")
}

record(longin, "$(acc):$(sys)_$(group)_$(num):ThreshCntLoTot_r") {
    field(DESC, "Total time over low threshold")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_CNT_LOW_TOTAL_R")
    field(SCAN, "I/O Intr")
}

record(longin, "$(acc):$(sys)_$(group)_$(num):ThreshCntHiTot_r") {
    field(DESC, "Total time over high threshold")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_CNT_HIGH_TOTAL_R")
    field(SCAN, "I/O Intr")
}

record(bo, "$(acc):$(sys)_$(group)_$(num):ThreshCntRst_s") {
    field(DESC, "Reset counters")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_THRESHOLD_CNT_RESET_S")
    field(SCAN, "Passive")
}

## Masking
record(bo, "$(acc):$(sys)_$(group)_$(num):Masking_s") {
    field(DESC, "Signal masking")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_MASKING_S")
    field(SCAN, "Passive")
    field(ONAM, "OFF")
    field(ZNAM, "ON")
}

record(bi, "$(acc):$(sys)_$(group)_$(num):Masking_r") {
    field(DESC, "Signal masking")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT=1))$(num)_MASKING_R")
    field(SCAN, "I/O Intr")
    field(ONAM, "OFF")
    field(ZNAM, "ON")
}
